{"version":3,"sources":["components/SearchBar/SearchBar.js","apis/weather.js","components/WeatherCard/WeatherCard.js","images/error.png","components/Forecast/Forecast.js","components/SearchResults/SearchResults.js","images/logo.png","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","history","useHistory","useState","city","setCity","className","onSubmit","e","preventDefault","length","push","onSubmitSearch","onChange","target","value","trim","placeholder","weather","axios","create","baseURL","params","appid","units","lang","toWeather","c","name","description","temp","Math","round","main","minTemp","temp_min","maxTemp","temp_max","feelsLike","feels_like","pressure","humidity","icon","id","getWeather","a","all","get","currentWeather","forecastWeather","current","data","forecast","list","filter","i","idx","map","date","dt","DateTime","fromSeconds","toFormat","error","response","WeatherCard","src","alt","toUpperCase","Forecast","d","SearchResults","props","searchResults","setSearchResults","useEffect","query","qs","parse","location","search","ignoreQueryPrefix","q","results","getCityData","undefined","errorImage","Home","logo","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a540c49a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./SearchBar.scss\";\r\n\r\nconst SearchBar = () => {\r\n  const history = useHistory();\r\n  const [city, setCity] = useState();\r\n\r\n  const onSubmitSearch = (e) => {\r\n    e.preventDefault();\r\n    if (city.length) {\r\n      history.push(`/weather?q=${city}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"searchbar\" onSubmit={(e) => onSubmitSearch(e)}>\r\n      <input\r\n        onChange={(e) => setCity(e.target.value.trim())}\r\n        placeholder=\"Ingresar una ciudad...\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import axios from \"axios\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nconst KEY = \"0eccca835e90e18eb5e8dc96186f2864\";\r\n\r\nconst weather = axios.create({\r\n  baseURL: \"https://api.openweathermap.org/data/2.5\",\r\n  params: {\r\n    appid: KEY,\r\n    units: \"metric\",\r\n    lang: \"ES\",\r\n  },\r\n});\r\n\r\nconst toImg = (id) => {\r\n  return `http://openweathermap.org/img/wn/${id}@4x.png`;\r\n};\r\n\r\nconst toWeather = (c) => {\r\n  return {\r\n    city: c.name,\r\n    weather: c.weather[0].description,\r\n    temp: Math.round(c.main.temp),\r\n    minTemp: Math.round(c.main.temp_min),\r\n    maxTemp: Math.round(c.main.temp_max),\r\n    feelsLike: Math.round(c.main.feels_like),\r\n    pressure: c.main.pressure,\r\n    humidity: c.main.humidity,\r\n    icon: toImg(c.weather[0].icon),\r\n  };\r\n};\r\n\r\nconst isFirstWeatherFromDay = (idx) => idx % 8 === 0 && idx !== 0;\r\nconst formatDate = (dt) => DateTime.fromSeconds(dt).toFormat(\"EEE\");\r\n\r\nexport const toForecast = (forecast) => {\r\n  return forecast.list\r\n    .filter((e, i) => isFirstWeatherFromDay(i))\r\n    .map((e) => {\r\n      return { date: formatDate(e.dt), ...toWeather(e) };\r\n    });\r\n};\r\n\r\nexport const getWeather = async (id) => {\r\n  try {\r\n    const [currentWeather, forecastWeather] = await axios.all([\r\n      weather.get(`/weather?q=${id}`),\r\n      weather.get(`/forecast?q=${id}`),\r\n    ]);\r\n\r\n    return {\r\n      current: toWeather(currentWeather.data),\r\n      forecast: toForecast(forecastWeather.data),\r\n    };\r\n  } catch (err) {\r\n    return { error: err.response };\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./WeatherCard.scss\";\r\n\r\nconst WeatherCard = ({ weather }) => {\r\n  return (\r\n    <div className=\"weather-card\">\r\n      <h1>{weather.city}</h1>\r\n      <div className=\"weather-card__main\">\r\n        <div className=\"weather-card__weather\">\r\n          <img src={weather.icon} alt={weather.weather} />\r\n          <span>{weather.weather.toUpperCase()}</span>\r\n        </div>\r\n        <div className=\"weather-card__temp\">\r\n          <span>{weather.temp}°C</span>\r\n          <span>Min: {weather.minTemp}°C</span>\r\n          <span>Max: {weather.maxTemp}°C</span>\r\n          <span>Sensación Termica: {weather.feelsLike}°C</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"weather-card__extra\">\r\n        <span>Presión: {weather.pressure} hPa</span>\r\n        <span>Humedad: {weather.humidity}%</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","export default __webpack_public_path__ + \"static/media/error.667d33c5.png\";","import React from \"react\";\r\nimport \"./Forecast.scss\";\r\n\r\nconst Forecast = ({ forecast }) => {\r\n  const renderForecast = () => {\r\n    return forecast.map((d) => {\r\n      return (\r\n        <div key={d.date} className=\"forecast__item\">\r\n          <span className=\"forecast__date\">{d.date}</span>\r\n          <img src={d.icon} alt={d.weather} />\r\n          <span className=\"forecast__temp\">{d.temp}°C</span>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return <div className=\"forecast\">{renderForecast()}</div>;\r\n};\r\n\r\nexport default Forecast;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport qs from \"qs\";\r\nimport { getWeather } from \"../../apis/weather\";\r\nimport WeatherCard from \"../WeatherCard/WeatherCard\";\r\nimport \"./SearchResults.scss\";\r\nimport errorImage from \"../../images/error.png\";\r\nimport Forecast from \"../Forecast/Forecast\";\r\n\r\nconst SearchResults = (props) => {\r\n  const [searchResults, setSearchResults] = useState();\r\n\r\n  useEffect(() => {\r\n    const getCityData = async () => {\r\n      const query = qs.parse(props.location.search, {\r\n        ignoreQueryPrefix: true,\r\n      });\r\n      const results = await getWeather(query.q);\r\n      setSearchResults(results);\r\n    };\r\n\r\n    getCityData();\r\n    return () => setSearchResults(undefined);\r\n  }, [props.location.search]);\r\n\r\n  const renderCard = () => {\r\n    if (searchResults && searchResults.error) {\r\n      return (\r\n        <div className=\"message\">\r\n          <img src={errorImage} alt=\"error\" />\r\n          <p>No se han encontrado resultados para su busqueda.</p>\r\n        </div>\r\n      );\r\n    }\r\n    if (searchResults) {\r\n      return (\r\n        <div className=\"search-results\">\r\n          <WeatherCard weather={searchResults.current} />\r\n          <Forecast forecast={searchResults.forecast} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div className=\"message\">Loading...</div>;\r\n    }\r\n  };\r\n\r\n  return renderCard();\r\n};\r\n\r\nexport default SearchResults;\r\n","export default __webpack_public_path__ + \"static/media/logo.5e0bf7f2.png\";","import React from \"react\";\r\nimport logo from \"../../images/logo.png\";\r\nimport \"./Home.scss\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <img src={logo} alt=\"logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.scss\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Searchbar from \"./components/SearchBar/SearchBar\";\r\nimport SearchResults from \"./components/SearchResults/SearchResults\";\r\nimport Home from \"./components/Home/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"container\">\r\n        <HashRouter>\r\n          <Searchbar />\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/weather\" exact component={SearchResults} />\r\n        </HashRouter>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}